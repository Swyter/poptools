//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: Prince of Persia: The Forgotten Sands (Wii) - Save game format
//   Authors: Swyter
//   Version: 2023.03.20
//  Category: Game
// File Mask: djinn*
//  ID Bytes: [+4] 4E 49 4A 44
//------------------------------------------------

BigEndian();

uint size_maybe;

struct
{
    char magic[4];
    uint version;


    int unk[24 / 4];
    ubyte data[size_maybe];

} head <open=true>;


/* swy: actual file ends here -- there's a trailing outer checksum; see revoINO_ReadFile() at offset 0x80556130 */
FSeek(FileSize() - 32);
uint weird_constants[32 / 4] <format=hex>;


local int m_WeirdConstant[8];

m_WeirdConstant[0] = 0x011;
m_WeirdConstant[1] = 0x05e;
m_WeirdConstant[2] = 0x115;
m_WeirdConstant[3] = 0x236;
m_WeirdConstant[4] = 0x3c1;
m_WeirdConstant[5] = 0x5b6;
m_WeirdConstant[6] = 0x815;
m_WeirdConstant[7] = 0xade;

local uint buf_end = FileSize() - 32, buf = 0, count = 5;
local uint aligned_uint_count = (buf_end + (3 - buf)) >> 2;


  if (buf < buf_end) {
    local uint loop_countdown = (uint)(buf_end + (3 - (int)buf)) >> 4;
    local uint pBuf = buf, idx_a, idx_b;
    if (loop_countdown != 0) {
      do
      {
        idx_a = (count + 3) * 4 & 0x1c;
        m_WeirdConstant[count] = m_WeirdConstant[count] + ReadInt(pBuf + 0);
        count = (count + 3 & 7) + 3;

        idx_b = count * 4 & 0x1c;
        count = (count & 7) + 3;
        m_WeirdConstant[idx_a] = m_WeirdConstant[idx_a] + ReadInt(pBuf + 1);

        idx_a = count * 4 & 0x1c;
        count = (count & 7) + 3 & 7;
        m_WeirdConstant[idx_b] = m_WeirdConstant[idx_b] + ReadInt(pBuf + 2);

        m_WeirdConstant[idx_a] = m_WeirdConstant[idx_a] + ReadInt(pBuf + 3);

        pBuf = pBuf + 4; loop_countdown -= 1;
      } while (loop_countdown != 0);

      aligned_uint_count &= 3;

      //if (aligned_uint_count == 0)
      //  goto check_checksum;
    }
    do
    {
      m_WeirdConstant[count] = m_WeirdConstant[count] + ReadInt(pBuf + 0);
      aligned_uint_count -= 1;
      count = count + 3 & 7;
      pBuf = pBuf + 1;
    } while (aligned_uint_count != 0);
  }

/*
check_checksum:
  if (m_WeirdConstant[0] == *(dword *)(buf + read_size)) {
    if (m_WeirdConstant[1] == *(dword *)(buf + read_size + 4)) {
      if (m_WeirdConstant[2] == *(dword *)(buf + read_size + 8)) {
        if (m_WeirdConstant[3] == *(dword *)(buf + read_size + 0xc)) {
          if (m_WeirdConstant[4] == *(dword *)(buf + read_size + 0x10)) {
            if (m_WeirdConstant[5] == *(dword *)(buf + read_size + 0x14)) {
              if (m_WeirdConstant[6] == *(dword *)(buf + read_size + 0x18)) {
                if (m_WeirdConstant[7] == *(dword *)(buf + read_size + 0x1c))
                {
                  ret_good = true;
                }
                else {
                  ret_good = false;
                }
              }
              else {
                ret_good = false;
              }
            }
            else {
              ret_good = false;
            }
          }
          else {
            ret_good = false;
          }
        }
        else {
          ret_good = false;
        }
      }
      else {
        ret_good = false;
      }
    }
    else {
      ret_good = false;
    }
  }
  else {
    ret_good = false;
  }
  if (ret_good) {
    return 0;
  }
  return 0xfffffeff;
*/