//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: Prince of Persia: The Forgotten Sands (Wii) - Save game format
//   Authors: Swyter
//   Version: 2023.03.20
//  Category: Game
// File Mask: djinn*
//  ID Bytes: [+4] 4E 49 4A 44
//------------------------------------------------

BigEndian();

uint size_global <comment="Size of everything that comes after this field.">;

struct
{
    char magic[4];
    uint version;

    int no_a, no_b, no_c;
    uint always_constant <format=hex>; /* swy: 442C2912h */

    int na_a, na_b, na_c;

    //int last_active_slot_id; // swy: usually 0 set to 2 when all three are on (??)
    //ushort zero_pad;

} head <open=true>;


typedef struct
{
    uint category_id;
    uint block_count;
} category <optimize=false>;

typedef struct
{
    ushort begin <format=hex, bgcolor=cRed>, variable_number <format=hex, bgcolor=cGreen>;
    int size;
    ubyte data[size];
} block <optimize=false, read=Str("[%02x] %x %u", begin, variable_number, size)>;


/* swy: https://docs.google.com/spreadsheets/d/1-HiKYq6U_5wbB12o9z4WatecptlSeT5n-B_GJ_U24Ho/edit */
enum<int> chapter_names
{
    The_Antique_Road_of_the_Merchants  = 0x110b,
    The_Kingdom_of_Izdihar             = 0x110d,
    The_Alley_of_the_Nobles            = 0x110c,
    The_Gate_of_the_Chosen_Ones        = 0x110e,
    The_Menagerie_of_the_Myths         = 0x110f,
    The_Gardens_of_Endless_Blossoming  = 0x1110,
    The_Path_of_the_Pilgrim            = 0x1111,
    The_Palaces_Gates                  = 0x1112,
    The_Water_Bearer                   = 0x1113,
    The_Hearth_of_the_Sacred_Fire      = 0x1114,
    The_Fallen_King                    = 0x1115,
    The_Forge_of_the_Gods              = 0x1116,
    The_Challenge_of_Faith             = 0x1117,
    The_Challenge_of_Wisdom            = 0x1118,
    The_Challenge_of_Virtue            = 0x1119,
    The_Challenge_of_Humility          = 0x111a,
    The_Stranded_Castle                = 0x111b,
    The_Realm_of_the_Eternal_Fire      = 0x111c,
    The_Souk_of_Izdihar                = 0x111d,
    The_Elixirs_of_Immortal_Souls      = 0x111e,
    The_Gift_of_the_Divine_Spirits     = 0x111f,
    You_Have_Freed_Me                  = 0x1120
};

// unk4 active slot related, unk5 tutorials, unk8 subtitles, unk5 camera assistance, 0x67c sound effects, 0x43c voices, 0x7ec ambiance, 0x7e4 cinematics, 0x680 cur prince weapon second nibble, outfit index first nibble
typedef struct
{
    ushort begin <format=hex, bgcolor=cRed>, variable_number <format=hex, bgcolor=cGreen>; /* swy: first: 3959h, second: +1, third: +1 */; uint size;
    chapter_names slot_level_string_idx; int respawn_id <format=hex>, spawn_map <format=hex>, d;
    uint slot_active_maybe, game_options_tutorials, game_options_camera_assistance;
    float audio_voices; int game_options_subtitles,i,j,k; int heroic_skills_maybe[138], dont_know; float audio_sound_effects;
    int pad : 24, cur_prince_weapon : 4, cur_prince_outfit : 4, unke;

    uint total_time_counter; // swy: 3600 = 60*60 => 0:06, 5751 => 0:09, 79479 => 2:12, 216000 = 60*60*60 => 6:00, 12960000 = 60*60*60*60 => 360:00, 48132000 = 1337 * 36000 => 1337:00

    int unlockable_extras_maybe[86];
    float audio_cinematics; uint zero; float audio_ambiance;
    enum<uint> { ch_never = 1, ch_sometimes = 2, ch_always = 3} game_options_combat_highlight;
    float audio_music;
    ushort zero_pad;
} djinn_slot <read=Str("%s -- %02u:%02u %s", EnumToString(slot_level_string_idx), total_time_counter / (60 * 60 * 10), (total_time_counter % (60 * 60 * 10)) / (60 * 10), slot_active_maybe ? "" : " [inactive]")>;

local ushort begin <format=hex>, variable_number <format=hex>; local uint size;

while (startof(size_global) + size_global > FTell())
{
    begin = ReadUShort(); variable_number = ReadUShort(FTell() + 2); size = ReadUInt(FTell() + 4);
    Printf("%x %x %x\n", begin, variable_number, size);

    if (size == 986)
        djinn_slot thing_a;
    else
        block blk;
}



/* swy: actual file ends here -- there's a trailing outer checksum; see revoINO_ReadFile() at offset 0x80556130
                                 and revoINO_SavUpdate() at offset 0x805570d0 for the write version */
FSeek(FileSize() - 32);
int weird_constants[32 / 4] <format=hex>;


/* -- */

